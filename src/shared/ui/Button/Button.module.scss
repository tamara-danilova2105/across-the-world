@use '@/app/styles/mixin.scss' as *;
@use 'sass:map';

$blue: var(--blue-color);
$white: var(--white-color);
$pink: var(--pink-color);
$peach: var(--peach-color);

$secondary-blue: var(--blue-opacity20);
$secondary-white: var(--white-opacity20);
$secondary-pink: var(--pink-opacity20);
$secondary-peach: var(--peach-opacity20);

$colors: (
    "blue": (primary: $blue, secondary: $secondary-blue),
    "white": (primary: $white, secondary: $secondary-white),
    "pink": (primary: $pink, secondary: $secondary-pink),
    "peach": (primary: $peach, secondary: $secondary-peach)
);

@mixin buttonUnderline($line-color) {
    position: relative;
    overflow: hidden;
    transition: background-color 0.5s ease-in-out;

    .underLine {
        position: absolute;
        left: 0;
        bottom: 0;
        height: 3px;
        width: 100%;
        align-self: flex-end;
        transform: translateX(-100%);
        background-color: $line-color;
        transition: all 0.3s ease-out;
    }

    &:hover .underLine {
        transform: translateX(0);
    }
}


.button {
    padding: 14px 30px;
    width: 100%;
    font-family: var(--font-family-geometria500);
    font-size: var(--font-size-18);
    border: none;
}

.primary {
    @include buttonUnderline(var(--pink-color));

    & {
        background-color: var(--blue-color);
        transition: background-color 0.5s ease-in-out;
        color: var(--white-color);
    }
}

.outline {
    @include buttonUnderline(var(--blue-color));

    & {
        background-color: transparent;
        color: var(--blue-color);
        border: 2px solid var(--blue-color);
        padding: 12px 30px;
    }
}

.secondary {
    background-color: var(--pink-color);
}

.circle {
    width: 54px;
    height: 54px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
}

.cta {
    @include cta-style;
}

.transparent {
    background-color: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    color: var(--blue-color);
}

.waiting {
    @each $name, $color-pair in $colors {
        $primary: map.get($color-pair, primary);
        $secondary: map.get($color-pair, secondary);

        &.#{$name} {
            circle {
                color: $primary;
                animation: fade-in-#{$name} 1.2s infinite;

                @keyframes fade-in-#{$name} {
                    0%{
                        color: $primary;
                    }
                    50%, 100% {
                        color: $secondary;
                    }
                }

                @for $i from 1 through 3 {
                    &:nth-child(#{$i}) {
                        animation-delay: .4s * ($i - 1);
                    }
                }
            }
        }
    }
}
